{"remainingRequest":"/Users/serafima/Coding/IdeasGen/frontend/ideas-gen-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/serafima/Coding/IdeasGen/frontend/ideas-gen-front/src/components/IdeaForm.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/serafima/Coding/IdeasGen/frontend/ideas-gen-front/src/components/IdeaForm.vue","mtime":1590708394532},{"path":"/Users/serafima/Coding/IdeasGen/frontend/ideas-gen-front/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/serafima/Coding/IdeasGen/frontend/ideas-gen-front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/serafima/Coding/IdeasGen/frontend/ideas-gen-front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/serafima/Coding/IdeasGen/frontend/ideas-gen-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/serafima/Coding/IdeasGen/frontend/ideas-gen-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiAgLm15Zm9ybSB7CiAgcGFkZGluZy1ib3R0b206IDEwMHB4Owp9CiAgLm15YnV0dG9uIHsKICBjb2xvcjogI2ZmZiAhaW1wb3J0YW50OwogIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7CiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOwogIGJhY2tncm91bmQ6ICNmYTk4M2E7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXItcmFkaXVzOiA1MHB4OwogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBib3JkZXI6IG5vbmU7CiAgdHJhbnNpdGlvbjogYWxsIDAuNHMgZWFzZSAwczsKICBtYXJnaW4tYm90dG9tOiA1MHB4Owp9Ci5teWJ1dHRvbjpob3ZlciB7CiAgdGV4dC1zaGFkb3c6IDBweCAwcHggNnB4IHJnYmEoMjU1LCAyNTUsIDI1NSwgMSk7CiAgLXdlYmtpdC1ib3gtc2hhZG93OiAwcHggNXB4IDQwcHggLTEwcHggcmdiYSgwLDAsMCwwLjU3KTsKICAtbW96LWJveC1zaGFkb3c6IDBweCA1cHggNDBweCAtMTBweCByZ2JhKDAsMCwwLDAuNTcpOwogIHRyYW5zaXRpb246IGFsbCAwLjRzIGVhc2UgMHM7Cn0KCiAubXlidXR0b24yIHNwYW4gewogICBjb2xvcjogIzI3YWU2MDsKICAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgIGZvbnQtc2l6ZTogMjBweDsKICAgY3Vyc29yOiBwb2ludGVyOwogICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgdHJhbnNpdGlvbjogMC40czsKIH0KIC5teWJ1dHRvbjIgc3BhbjphZnRlciB7CiAgIGNvbnRlbnQ6ICdcMDBiYic7CiAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgb3BhY2l0eTogMDsKICAgdG9wOiAwOwogICByaWdodDogLTIwcHg7CiAgIHRyYW5zaXRpb246IDAuNXM7CiB9CiAubXlidXR0b24yOmhvdmVyIHNwYW4gewogICBwYWRkaW5nLXJpZ2h0OiAyNXB4OwogfQogLm15YnV0dG9uMjpob3ZlciBzcGFuOmFmdGVyIHsKICAgb3BhY2l0eTogMTsKICAgcmlnaHQ6IDA7CiB9Cg=="},{"version":3,"sources":["IdeaForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"IdeaForm.vue","sourceRoot":"src/components","sourcesContent":["\n<template>\n   <form @submit.prevent=\"submit\" class=\"myform\">\n     <div class=\"button_cont\" @click=\"get\" align=\"center\"><a class=\"mybutton\" target=\"_blank\" rel=\"nofollow noopener\">Получить идеи!</a></div>\n     <div style=\"margin-bottom: 200px; color: white; font-weight: bold;\">{{ideas}}</div>\n     <h2 style=\"color: white;\">Уже есть хорошая идея, и ты хочешь ею поделиться?</h2>\n        <div class=\"form-group\">\n            <label for=\"idea\" style=\"color: white; margin-right: 50px;\">Ваша идея     </label>\n            <input type=\"text\" class=\"form-control\" name=\"idea\" id=\"idea\" v-model=\"fields.name\" />\n            <div v-if=\"errors && errors.name\" class=\"text-danger\">{{ errors.name[0] }}</div>\n        </div>\n    \n        <div @click=\"submit\" class=\"button_cont\" align=\"center\"><a class=\"mybutton2\" target=\"_blank\" rel=\"nofollow\"><span>Отправить идею!</span></a></div>\n    </form >\n</template>\n\n\n<script>\nimport axios from 'axios'\n\nexport default {\n\n  data() {\n    return {\n      fields: {},\n      errors: {},\n      ideas: {}\n    }\n  },\n  methods: {\n    submit() {\n      this.errors = {};\n      axios.post('api/idea/add', this.fields).then(() => {\n        alert('Идея отправлена!');\n      }).catch(error => {\n        if (error.response.status === 422) {\n          this.errors = error.response.data.errors || {};\n        }\n      });\n    },\n    get() {\n      axios.get('/api/idea/all')\n      .then((response) => {\n        console.log('get')\n        this.ideas = response.data\n      })\n    }\n  },\n}\n</script>\n\n<style>\n  .myform {\n  padding-bottom: 100px;\n}\n  .mybutton {\n  color: #fff !important;\n  text-transform: uppercase;\n  text-decoration: none;\n  background: #fa983a;\n  padding: 20px;\n  border-radius: 50px;\n  display: inline-block;\n  border: none;\n  transition: all 0.4s ease 0s;\n  margin-bottom: 50px;\n}\n.mybutton:hover {\n  text-shadow: 0px 0px 6px rgba(255, 255, 255, 1);\n  -webkit-box-shadow: 0px 5px 40px -10px rgba(0,0,0,0.57);\n  -moz-box-shadow: 0px 5px 40px -10px rgba(0,0,0,0.57);\n  transition: all 0.4s ease 0s;\n}\n\n .mybutton2 span {\n   color: #27ae60;\n   font-weight: bold;\n   font-size: 20px;\n   cursor: pointer;\n   display: inline-block;\n   position: relative;\n   transition: 0.4s;\n }\n .mybutton2 span:after {\n   content: '\\00bb';\n   position: absolute;\n   opacity: 0;\n   top: 0;\n   right: -20px;\n   transition: 0.5s;\n }\n .mybutton2:hover span {\n   padding-right: 25px;\n }\n .mybutton2:hover span:after {\n   opacity: 1;\n   right: 0;\n }\n</style>"]}]}